#include <iostream>

using namespace std;



class node
{
  public:
    int cityno;
    char  timein[5];
    char timeout[5];
    string flight;
    int price;
    node* next;


    node(int x,char s1[],char s2[],string fno,int cost)
    {
        cityno=x;

        for(int i=0;i<=4;i++){
        timein[i]=s1[i];
        timeout[i]=s2[i];
        }
        flight=fno;
        price=cost;
        next=NULL;

    }
};

void ins(node* a[],node* r,int x)
{
    node* temp;
    temp=a[x];

    if(temp==NULL)
    {a[x]=r;
    return;
    }
    while((temp->next)!=NULL)
    temp=temp->next;

    temp->next=r;
}



int minim(node* a[],int x1,int x2,char s1[],char s2[],int n,bool vis[])
{



    node* temp=a[x1];

    if(x1==x2)
    return 0;

    if(temp==NULL)
    return -1;

    vis[x1]=true;

    int h1=(s1[0]-'0')*10+(s1[1]-'0');
    int m1=10*(s1[2]-'0') + (s1[3]-'0');


    int h2=(s2[0]-'0')*10+(s2[1]-'0');
    int m2=10*(s2[2]-'0') + (s2[3]-'0');

    int hx,mx,z,hx1,mx1;

    int nu,m=INT_MAX;

    char s[5],ss[5];
    while(temp!=NULL)
    {
        nu=temp->cityno ;

        if(vis[nu]==false){
        for(int i=0;i<=4;i++){
        s[i]=(temp)->timein[i];
        ss[i]=(temp)->timeout[i];
        }

        hx=(s[0]-'0')*10+(s[1]-'0');
        mx=(s[2]-'0')*10+(s[3]-'0');


        hx1=(ss[0]-'0')*10+(ss[1]-'0');
        mx1=(ss[2]-'0')*10+(ss[3]-'0');

        char A1[5];
        if( (h1<hx || ((h1==hx) && m1<=mx) ) &&  ( hx1<h2  || (hx1==h2 && mx1<=m2)) )
        {   vis[nu]=true;

            mx1=mx1+30;
            int r=mx1/60 ;
            mx1=mx1%60;
            hx1=hx1+c;

            A1[1]=hx1%10;
            hx1=hx1/10;

            A1[0]=hx1;


            A1[3]=mx1%10;
            mx1=mx1/10;

            A1[2]=mx1;
            int u=minim(a,nu,x2,A1,s2,n,vis);
            z=temp->price + u;
            if(z<m && u!=-1)
            m=z;
        }

      }
      temp=temp->next;

    }

    if(m!=INT_MAX)
    return m;
    else
    return -1;

}
int main()
{

   int n;
   cin>>n;
   bool visited[n+1]={false};

   node* c[n+1]={NULL};

   int inf;
   cin>>inf;


   int c1,c2;
   string fnum;

   char tin[5],tout[5]  ;

   int cost;

   for(int i=1;i<=inf;i++)
   {
      cin>>c1;
      cin>>c2;
      cin>>tin;
      cin>>tout;
      cin>>fnum;
      cin>>cost;
      node* a=new node(c2,tin,tout,fnum,cost);

      ins(c,a,c1);

   }

    node* temp=c[1];
    while((temp)!=NULL){

     cout<<temp->price;
     cout<<endl;
     temp=temp->next;

    }


   int q,v;
   cin>>q;

   for(int i=1;i<=q;i++)
   {
      cin>>c1>>c2;

      cin>>tin>>tout;


      v=minim(c,c1,c2,tin,tout,n,visited);

   }






   return 0;
}
